extension GroundFloorMass --> GroundFloorMass.
extension LowerTierFLoorMass --> LowerTierFLoorMass.
extension UpperTierFloorMass --> UpperTierFloorMass.
extension LowerTierRoof --> NIL
extension UpperTierRoof --> NIL

import Setback_Labels : "Imports/Setback_Labels.cga"


import _Upper_Tier_Setback : "Zoning/Setback.cga" (
	Setback --> LowerTierRoof,
	Remainder --> UpperTier,
	Reference = Stepback_Reference,
	Setback_All = Stepback_All,
	Setback_Front = Stepback_Front,
	Setback_Left = Stepback_Left,
	Setback_Right = Stepback_Right,
	Setback_Rear = Stepback_Rear
)

@Group("Lower Tier", 10)
@Order(10)
@Range(min=1, max=10)
attr Ground_Floor_Height = 4.0

@Order(11)
@Range(min=1, max=10)
attr Floor_Height = 3.0

@Order(12)
@Range(min=1, max=10, stepsize=1)
attr N_Floors = 5


@Group("Upper Tier", 20)
@Order(20)
@Range(min=1, max=10, stepsize=1)
attr Upper_Tier_N_Floors = 1

@Order(21)
@Range(min=1, max=10)
attr Upper_Tier_Floor_Height = 2.6


@Group("Upper Tier Stepbacks", 30)
@Order(30)
@Enum(valuesAttr=Setback_Labels.labels)
attr Stepback_Reference = Setback_Labels.setbackTags

@Order(31)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Stepback_All = 0.0

@Order(32)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Stepback_Front = 2.0

@Order(33)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Stepback_Left = 1.0

@Order(34)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Stepback_Right = 1.0

@Order(35)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Stepback_Rear = 1.0

_getLowerTierHeight() = Floor_Height * (N_Floors - Upper_Tier_N_Floors - 1) + Ground_Floor_Height


start Start -->
	LowerTier
	_Upper_Tier_Setback.start


LowerTier -->
	extrude(_getLowerTierHeight())
	split(y){
		~Ground_Floor_Height: GroundFloorMass |
		{~Floor_Height: LowerTierFLoorMass} *
	}


UpperTier -->
	t(0, _getLowerTierHeight(), 0)
	extrude(Upper_Tier_Floor_Height * Upper_Tier_N_Floors)
	split(y){
		~Upper_Tier_Floor_Height: UpperTierFloorMass
	}*
	comp(f){top: UpperTierRoof}