extension GroundFloorMass --> GroundFloorMass.
extension RegularFloorMass --> RegularFloorMass.
extension TopFloorMass --> TopFloorMass.

@Order(10)
@Range(min=1, max=10)
attr Ground_Floor_Height = 4.0

@Order(11)
@Range(min=1, max=10)
attr Floor_Height = 3.0

start Start with(
	hullHeight := scope.sy
	nRegularFloors := 1 + floor((hullHeight - Ground_Floor_Height) / Floor_Height)
	buildingHeight := Ground_Floor_Height + nRegularFloors * Floor_Height
) -->
	t(0, -hullHeight, 0)
	comp(f){
		top: 
			ExtrudeAndSplit(buildingHeight) 
	}

ExtrudeAndSplit(hullHeight) with(
	nRegularFloors := floor((hullHeight - Ground_Floor_Height) / Floor_Height)
	buildingHeight := Ground_Floor_Height + nRegularFloors * Floor_Height
) -->
	case hullHeight < Ground_Floor_Height:
		NIL
	case nRegularFloors == 0:
		extrude(Ground_Floor_Height)
		split(y){Ground_Floor_Height: GroundFloorMass}
	case nRegularFloors == 1:
		extrude(Ground_Floor_Height + Floor_Height)
		split(y){
			Ground_Floor_Height: GroundFloorMass |
			Floor_Height: TopFloorMass
		}
	else:
		extrude(Ground_Floor_Height + nRegularFloors * Floor_Height)
		split(y){
			Ground_Floor_Height: GroundFloorMass |
			{
				Floor_Height: RegularFloorMass
			}* |
			Floor_Height: TopFloorMass
		}
