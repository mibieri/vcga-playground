extension Setback --> SetbackFace.
extension Remainder --> color("#CCFFCC") Remainder.

@Order(1)
@Enum(valuesAttr=_referenceEnum)
attr Reference = label_shape


@Order(2)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Setback_All = 0.0

@Order(3)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Setback_Front = 0.0

@Order(4)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Setback_Side = 0.0

@Order(5)
@Range(min=0, max=50, stepsize=0.1, restricted=false)
attr Setback_Rear = 0.0

@Hidden
attr _referenceEnum = [label_edgeAttr, label_shape, label_setback]
const label_edgeAttr = "Edge Attributes"
const label_shape = "Edge Selectors"
const label_setback = "Setback"


getSetbacks() =
	case Reference == label_edgeAttr:
		getEdgeAttrSetbacks()
	case Reference == label_shape:
		getShapeSetbacks()
	case Reference == label_setback:
		getSetbackSetbacks()
	else:
		floatArray()
		

getEdgeAttrSetbacks() = 
	comp(fe){ all: 
		case edgeAttr.getString("orientations") == "front": Setback_Front
		case edgeAttr.getString("orientations") == "rear": Setback_Rear
		case edgeAttr.getString("orientations") == "side": Setback_Side
		else: 0
	}

getShapeSetbacks() = 
	comp(fe){ 
		front: Setback_Front |
		back: Setback_Rear |
		left: Setback_Side |
		right: Setback_Side
	}	
	
getSetbackSetbacks() =
	comp(fe){
		isTagged("setback.front"): Setback_Front |
		isTagged("setback.back"): Setback_Rear |
		isTagged("setback.side"): Setback_Side |
		all: 0
	}


start Start -->
	print(comp(fe){all: str(geometry.tags("setback"))})
	setback(getSetbacks() .+ Setback_All){
		all: Setback |
		remainder: Remainder
	}
	