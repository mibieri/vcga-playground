extension Surroundings --> NIL
extension Footprints --> Footprint.
extension Footprint1 --> NIL
extension Footprint2 --> NIL
extension Footprint3 --> NIL
extension Footprint4 --> NIL
extension Footprint5 --> NIL
extension Footprint6 --> NIL
extension Footprint7 --> NIL
extension Footprint8 --> NIL

import Perimeter_Labels : "Imports/Perimeter_Labels.cga"
import Perimeter_Edge_Selection : "Imports/Perimeter_Edge_Selection.cga"

import edge_visualisation:"edge-visualisation.cga"
@Group("General", 0)
@Order(0)
@Enum(valuesAttr=Perimeter_Labels.edge_labels)
attr Edges = Perimeter_Labels.edge_labels[0]

@Order(1)
@Enum(valuesAttr=Perimeter_Labels.pattern_labels)
attr FillPattern = Perimeter_Labels.pattern_labels[0]

@Order(2)
@Percent
attr StartPosition = 0.0

@Order(3)
@Percent
attr PatternLength = 1.0


@Group("Footprint 1", 100)
@Order(100)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint1_Length = 0

@Order(110)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint1_GapLength = 0

@Order(120)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint1_Width = 10

@Order(130)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint1_Inset = 0


@Group("Footprint 2", 200)
@Order(200)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint2_Length = 0

@Order(210)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint2_GapLength = 0

@Order(220)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint2_Width = 10

@Order(230)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint2_Inset = 0


@Group("Footprint 3", 300)
@Order(300)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint3_Length = 0

@Order(310)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint3_GapLength = 0

@Order(320)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint3_Width = 10

@Order(330)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint3_Inset = 0


@Group("Footprint 4", 400)
@Order(400)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint4_Length = 0

@Order(410)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint4_GapLength = 0

@Order(420)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint4_Width = 10

@Order(230)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint4_Inset = 0


@Group("Footprint 5", 500)
@Order(500)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint5_Length = 0

@Order(510)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint5_GapLength = 0

@Order(520)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint5_Width = 10

@Order(530)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint5_Inset = 0


@Group("Footprint 6", 600)
@Order(600)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint6_Length = 0

@Order(610)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint6_GapLength = 0

@Order(620)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint6_Width = 10

@Order(630)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint6_Inset = 0


@Group("Footprint 7", 700)
@Order(700)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint7_Length = 0

@Order(710)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint7_GapLength = 0

@Order(720)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint7_Width = 10

@Order(730)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint7_Inset = 0


@Group("Footprint 8", 800)
@Order(800)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint8_Length = 0

@Order(810)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint8_GapLength = 0

@Order(820)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint8_Width = 10

@Order(830)
@Range(min=0, max=100, stepsize=0.1, restricted=false)
attr Footprint8_Inset = 0

const widths = [
	Footprint1_Width, Footprint2_Width, Footprint3_Width, Footprint4_Width,
	Footprint5_Width, Footprint6_Width, Footprint7_Width, Footprint8_Width
]

const insets = [
	Footprint1_Inset, Footprint2_Inset, Footprint3_Inset, Footprint4_Inset,
	Footprint5_Inset, Footprint6_Inset, Footprint7_Inset, Footprint8_Inset
]

const maxSetback with(
	setbacks := insets .+ widths
) = setbacks[sortIndices(setbacks)[size(setbacks) - 1]]


start Start -->
	splitAndSetbackPerimeter(0, 0, Perimeter_Edge_Selection.getEdgeMask(Edges)){
		'StartPosition: 0 : Surroundings |
		'PatternLength: maxSetback : Pattern
	}{remainder: Surroundings}
	
f() = print(comp(fe){all: str(geometry.tags("setback"))})

Pattern with(
	setbackFrontMask := Perimeter_Edge_Selection.getSetbackFrontMask()
	firstFrontEdge := print(Perimeter_Edge_Selection.getFirstSetbackFrontEdge())
)-->
	case FillPattern == Perimeter_Labels.pattern_absolute:
		splitAndSetbackPerimeter(0, 0, setbackFrontMask){
			Footprint1_Length - Footprint1_GapLength : Footprint1_Width + Footprint1_Inset : Inset(1) |
			Footprint1_GapLength : 0 : Surroundings |
			Footprint2_Length - Footprint2_GapLength : Footprint2_Width + Footprint2_Inset : Inset(2) |
			Footprint2_GapLength : 0 : Surroundings |
			Footprint3_Length - Footprint3_GapLength : Footprint3_Width + Footprint3_Inset : Inset(3) |
			Footprint3_GapLength : 0 : Surroundings |
			Footprint4_Length - Footprint4_GapLength : Footprint4_Width + Footprint4_Inset : Inset(4) |
			Footprint4_GapLength : 0 : Surroundings |
			Footprint5_Length - Footprint5_GapLength : Footprint5_Width + Footprint5_Inset : Inset(5) |
			Footprint5_GapLength : 0 : Surroundings |
			Footprint6_Length - Footprint6_GapLength : Footprint6_Width + Footprint6_Inset : Inset(6) |
			Footprint6_GapLength : 0 : Surroundings |
			Footprint7_Length - Footprint7_GapLength : Footprint7_Width + Footprint7_Inset : Inset(7) |
			Footprint7_GapLength : 0 : Surroundings |
			Footprint8_Length - Footprint8_GapLength : Footprint8_Width + Footprint8_Inset : Inset(8) |
			Footprint8_GapLength : 0 : Surroundings
		}{remainder: Surroundings}
	case FillPattern == Perimeter_Labels.pattern_absoluteRepeat:
		splitAndSetbackPerimeter(0, 0, setbackFrontMask){
			Footprint1_Length - Footprint1_GapLength : Footprint1_Width + Footprint1_Inset : Inset(1) |
			Footprint1_GapLength : 0 : Surroundings |
			Footprint2_Length - Footprint2_GapLength : Footprint2_Width + Footprint2_Inset : Inset(2) |
			Footprint2_GapLength : 0 : Surroundings |
			Footprint3_Length - Footprint3_GapLength : Footprint3_Width + Footprint3_Inset : Inset(3) |
			Footprint3_GapLength : 0 : Surroundings |
			Footprint4_Length - Footprint4_GapLength : Footprint4_Width + Footprint4_Inset : Inset(4) |
			Footprint4_GapLength : 0 : Surroundings |
			Footprint5_Length - Footprint5_GapLength : Footprint5_Width + Footprint5_Inset : Inset(5) |
			Footprint5_GapLength : 0 : Surroundings |
			Footprint6_Length - Footprint6_GapLength : Footprint6_Width + Footprint6_Inset : Inset(6) |
			Footprint6_GapLength : 0 : Surroundings |
			Footprint7_Length - Footprint7_GapLength : Footprint7_Width + Footprint7_Inset : Inset(7) |
			Footprint7_GapLength : 0 : Surroundings |
			Footprint8_Length - Footprint8_GapLength : Footprint8_Width + Footprint8_Inset : Inset(8) |
			Footprint8_GapLength : 0 : Surroundings
		}*{remainder: Surroundings}
	case FillPattern == Perimeter_Labels.pattern_relative:
		splitAndSetbackPerimeter(0, 0, setbackFrontMask){
			~Footprint1_Length - Footprint1_GapLength : Footprint1_Width + Footprint1_Inset : Inset(1) |
			~Footprint1_GapLength : 0 : Surroundings |
			~Footprint2_Length - Footprint2_GapLength : Footprint2_Width + Footprint2_Inset : Inset(2) |
			~Footprint2_GapLength : 0 : Surroundings |
			~Footprint3_Length - Footprint3_GapLength : Footprint3_Width + Footprint3_Inset : Inset(3) |
			~Footprint3_GapLength : 0 : Surroundings |
			~Footprint4_Length - Footprint4_GapLength : Footprint4_Width + Footprint4_Inset : Inset(4) |
			~Footprint4_GapLength : 0 : Surroundings |
			~Footprint5_Length - Footprint5_GapLength : Footprint5_Width + Footprint5_Inset : Inset(5) |
			~Footprint5_GapLength : 0 : Surroundings |
			~Footprint6_Length - Footprint6_GapLength : Footprint6_Width + Footprint6_Inset : Inset(6) |
			~Footprint6_GapLength : 0 : Surroundings |
			~Footprint7_Length - Footprint7_GapLength : Footprint7_Width + Footprint7_Inset : Inset(7) |
			~Footprint7_GapLength : 0 : Surroundings |
			~Footprint8_Length - Footprint8_GapLength : Footprint8_Width + Footprint8_Inset : Inset(8) |
			~Footprint8_GapLength : 0 : Surroundings
		}{remainder: NIL}
	else:
		NIL

Inset(elementIndex) with(
	inset := insets[elementIndex - 1]
) -->
	case inset == 0:
		Footprint(elementIndex)
	else:
		#edge_visualisation.ShowAutoTags
		setback(comp(fe){isTagged("setback.front"): inset}){
			all: NIL | 
			remainder: #edge_visualisation.ShowAutoTags
				setback(comp(fe){isTagged("setback.back"): 1000}){
					all: Footprint(elementIndex) | remainder: Surroundings
			}
		}

Footprint(elementIndex) -->
	Footprints
	[
	case elementIndex == 1: Footprint1
	case elementIndex == 2: Footprint2
	case elementIndex == 3: Footprint3
	case elementIndex == 4: Footprint4
	case elementIndex == 5: Footprint5
	case elementIndex == 6: Footprint6
	case elementIndex == 7: Footprint7
	case elementIndex == 8: Footprint8
	else: NIL
	]

	